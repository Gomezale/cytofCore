==CyTOFCore README 0.3==
===Installation===
The cytofCore package can be installed directly from github using the devtools package. Start R and run the following commands:
 R>install.packages("devtools")
 R>library("devtools")
Now install the cytofCore package
 R>install_github("nolanlab/cytofCore")

===Editing the Panel of a set of FCS Files===
The cytofCore.updatePanel function can be used to edit the panel written into the header of a set of FCS files. Typical edits include making spelling consistent (e.g., HLADR vs. HLA-DR), removing entire columns, re-ordering columns, etc. To use the panel editor, you must first prepare a template file with the desired panel. It can take one of two forms:

*FCS Template: You may use an existing FCS file that has the correct panel as your template. 

*Spreadsheet Template: You may write your desired panel into a spreadsheet. The first column should be a list of the channel names, and the second column should be the marker you want to write into those channels. You must save your spreadsheet as a CSV or tab-delimited TXT file. Below is an example spreadsheet that would create FCS files with only four parameters 

{| class="wikitable" style="margin: auto;"
|-
| Time 
| Time
|-
| Cell_length
| Cell_length
|-
| (Ir191)Di
| DNA1
|-
| (Ir193)Di
| DNA2
|}

You must put all the FCS files whose panels you want to update to the template's panel into a single folder. You will be asked to choose the template file, and then the folder of FCS files. When choosing the folder, you must actually enter into that folder in the selection window before clicking OK.

In every FCS file in the selected folder, the panel updater will search for each metal listed in the template, and then will write that metal's marker as it is written in the template. It will put the list of metals/markers in the same order in each file. If a metal is not found, it will ask whether you want to include a placeholder column of zeros, or if you want to omit that channel from that file. A subfolder called 'relabeled' will be created within the selected folder, and new FCS files will be written there.

To use the panel editor, you must load the cytofCore library, and then call the cytofCore.updatePanel function:

 R>library("cytofCore")
 R>cytofCore.updatePanel()

===Adding the XML tail to an IMD File===
In the occasional circumstance that the CyTOF software crashes or is forced to quit while still writing an IMD file, the XML tail of the IMD file that includes the panel and dual calibration information may not get written. It is necessary to add this information to the IMD file before extracting the cell events. The easiest way to do this is to copy the entire XML tail from another IMD file that has the same panel and dual calibration values. To do this:

 R>library("cytofCore")
 R>cytofCore.copyImdXml(sourceImdFilename,targetImdFilename)

For example, if the name of the truncated file is ''fileWithoutXml.imd'', and the name of the template file is ''fileWithXml.imd'', the command would be

 R>cytofCore.copyImdXml("fileWithXml.imd","fileWithoutXml.imd")

It is strongly recommended to apply this code only to files that have been backed up. 

<!-- ===Using Automator Applets===
Several automator applets have been included that enable drag-and-drop functionality for certain cytofCore operations. [https://github.com/nolanlab/cytofCore/archive/master.zip Download] the cytofCore source distribution to use. These should work in Mac OS X 10.6 or later. '''''Files processed by the Automator applets may ''not'' have spaces in their paths, or they will fail.''''' 

Currently applets include:
;Subtract100.app
: Subtracts 100 from all FCS file columns except the first two.
;ExtractIMD.app
: Converts binary IMD files to text.
;Concatenate.app
: Concatenates multiple FCS files into a single file.

Automator Applets are found in:
 cytofCore/src/automator/apps/ -->

<!-- ===Automator Applet Notes===
* '''Subtract100.app'''
** Drag an FCS onto it to subtract 100 from all columns but the first two.
** You can drag multiple files on the applet and it will subtract 100 from all files.

* '''ExtractIMD.app'''
** Drag an IMD file and corresponding .conf file onto ExtractIMD.app to convert IMD to text.
** Extraction of full IMD files takes a significant amount of time and space. It is likely better to extract relevant portions of the IMD by supplying specific start and end times for extraction. Time limits are in ''milliseconds.'' 

* '''Concatenate.app'''
** Drag multiple FCS files onto Concatenate.app to combine them.
** All FCS files must have identical parameters names and orders. -->
